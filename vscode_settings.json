{
  "security.workspace.trust.untrustedFiles": "open",
  "microsoft-sovereign-cloud.environment": "",
  "database-client.autoSync": true,
  "markdown-pdf.breaks": true,
  "markdown-pdf.displayHeaderFooter": false,
  "workbench.startupEditor": "none",
  "git.openRepositoryInParentFolders": "always",
  "eppz-code.disableAnalytics": true,
  "dotnet.automaticallySyncWithActiveItem": true,
  "dotnet.testWindow.enableTestExplorerDiff": true,
  "csharpextensions.useFileScopedNamespace": true,
  "csharpextensions.useThisForCtorAssignments": false,
  "editor.formatOnSave": true,
  "chat.agent.enabled": false,
  "chat.commandCenter.enabled": false,
  "editor.fontFamily": "FiraCode Nerd Font Propo",
  "editor.fontLigatures": true,
  "workbench.settings.applyToAllProfiles": [
    "editor.fontFamily",
    "editor.fontLigatures"
  ],
  "editor.formatOnType": true,
  "NugetGallery.credentialProviderFolder": "{user-profile}/.nuget/plugins/netcore/CredentialProvider.Microsoft",
  "NugetGallery.skipRestore": "false",
  "NugetGallery.sources": [
    "{\"name\":\"nuget.org\",\"url\":\"https://api.nuget.org/v3/index.json\"}"
  ],
  "telemetry.telemetryLevel": "off",
  "dotnetAcquisitionExtension.enableTelemetry": false,
  "telemetry.editStats.enabled": false,
  "telemetry.feedback.enabled": false,
  // --- Lock base theme to avoid startup races
  "window.autoDetectColorScheme": false,
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.preferredDarkColorTheme": "Default Dark Modern",
  "workbench.preferredLightColorTheme": "Default Dark Modern",
  "workbench.preferredHighContrastColorTheme": "Default Dark Modern",
  "workbench.preferredHighContrastLightColorTheme": "Default Dark Modern",
  // ===== UI / CHROME (Lightened Green-Gray) =====
  "workbench.colorCustomizations": {
    "editor.background": "#181B19",
    "editor.foreground": "#E6E6E6",
    "editorLineNumber.foreground": "#5B6460",
    "editorLineNumber.activeForeground": "#9CDCFE",
    "editorCursor.foreground": "#9CDCFE",
    "editor.selectionBackground": "#2C537F",
    "editor.inactiveSelectionBackground": "#2C537F44",
    "editor.lineHighlightBackground": "#1E221F",
    "editorWhitespace.foreground": "#4A514D",
    "editorIndentGuide.background1": "#313C37",
    "editorIndentGuide.activeBackground1": "#3F4D47",
    "sideBar.background": "#151815",
    "sideBar.border": "#222723",
    "activityBar.background": "#151815",
    "activityBar.border": "#222723",
    "statusBar.background": "#121512",
    "statusBar.border": "#222723",
    "tab.activeBackground": "#1E221F",
    "tab.inactiveBackground": "#151815",
    "tab.activeForeground": "#E6E6E6",
    "tab.inactiveForeground": "#B5BBB8",
    "tab.border": "#222723",
    "menu.background": "#181B19",
    "dropdown.background": "#181B19",
    "list.activeSelectionBackground": "#1E221F",
    "list.hoverBackground": "#1A1E1B",
    "focusBorder": "#3a4a63",
    "panel.border": "#222723",
    // Brackets (5 levels)
    "editorBracketHighlight.foreground1": "#6FB6C9",
    "editorBracketHighlight.foreground2": "#C9976F",
    "editorBracketHighlight.foreground3": "#9E6FC9",
    "editorBracketHighlight.foreground4": "#6FC97A",
    "editorBracketHighlight.foreground5": "#C96F7A",
    "editorBracketHighlight.foreground6": "#C96F7A",
    "editorBracketMatch.background": "#FFFFFF1F",
    "editorBracketMatch.border": "#E6E6E6",
    "editorBracketHighlight.unexpectedBracket.foreground": "#F48771"
  },
  // ===== BRACKETS =====
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": "active",
  // ===== SEMANTIC HIGHLIGHTING (C#) — your colors =====
  "editor.semanticHighlighting.enabled": true,
  "csharp.semanticHighlighting.enabled": true,
  "editor.semanticTokenColorCustomizations": {
    "rules": {
      // --- TYPES ---
      "type.class": {
        "foreground": "#6FA8C9",
        "bold": true
      }, // teal
      "type.struct": {
        "foreground": "#6FC99E",
        "bold": true
      }, // green-teal
      "type.class.record": {
        "foreground": "#C9C16F",
        "bold": true,
        "italic": true
      }, // yellow (records)
      "type.interface": {
        "foreground": "#8F8FC9"
      }, // blue-violet
      "type.enum": {
        "foreground": "#A76FC9",
        "bold": true
      }, // violet
      // LS variants (safety)
      "class": {
        "foreground": "#6FA8C9",
        "bold": true
      },
      "struct": {
        "foreground": "#6FC99E",
        "bold": true
      },
      "class.record": {
        "foreground": "#C9C16F",
        "bold": true,
        "italic": true
      },
      "type.record": {
        "foreground": "#C9C16F",
        "bold": true,
        "italic": true
      },
      "interface": {
        "foreground": "#8F8FC9"
      },
      "enum": {
        "foreground": "#A76FC9",
        "bold": true
      },
      // --- MEMBERS ---
      "property": {
        "foreground": "#6FA8C9",
        "bold": true
      }, // align with class
      "method": {
        "foreground": "#B6A6C9"
      }, // instance: soft violet
      "method.static": {
        "foreground": "#9E6FC9",
        "italic": true
      },
      "method.async": {
        "foreground": "#9E6FC9",
        "underline": true
      },
      "method.extension": {
        "foreground": "#C96FAF",
        "underline": true
      },
      "field": "#C98F6F", // warm tan
      "field.readonly": {
        "foreground": "#C98F6F",
        "italic": true
      },
      "field.static": {
        "foreground": "#C98F6F",
        "bold": true
      },
      "field.static.readonly": {
        "foreground": "#C98F6F",
        "bold": true,
        "italic": true
      },
      "event": {
        "foreground": "#6FA8C9",
        "underline": true
      },
      "event.static": {
        "foreground": "#6FA8C9",
        "underline": true,
        "bold": true
      },
      // --- VARIABLES / PARAMETERS ---
      "variable": "#6FC97A",
      "variable.readonly": {
        "foreground": "#6FC97A",
        "italic": true
      },
      "parameter": {
        "foreground": "#E6E6E6",
        "italic": true
      }, // all params
      // --- CONSTANTS / ENUM MEMBERS ---
      "variable.constant": {
        "foreground": "#C9BE6F",
        "bold": true
      }, // gold-olive
      "enumMember": "#FFD479",
      // --- NAMESPACES / TYPE PARAMETERS ---
      "namespace": "#6FA4C9",
      "typeParameter": {
        "foreground": "#E6E6E6",
        "italic": true
      },
      // --- STRINGS & COMMENTS (semantic) ---
      "string": {
        "foreground": "#cfb78d"
      }, // dim, slightly orange
      "comment": {
        "foreground": "#5A6B5A",
        "italic": true
      } // dark green
    }
  },
  // ===== TEXTMATE — ONLY for scopes with no semantic tokens =====
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      // Base strings (mirror semantic hue; safe if LS briefly lags)
      {
        "scope": [
          "string.quoted.double",
          "string.quoted.single",
          "string.interpolated",
          "string.verbatim",
          "string.quoted.double.cs",
          "string.quoted.single.cs",
          "string.interpolated.cs",
          "string.verbatim.cs"
        ],
        "settings": {
          "foreground": "#cfb78d"
        }
      },
      // Comments (covers doc/line/block)
      {
        "scope": [
          "comment",
          "comment.block.documentation",
          "comment.block",
          "comment.line",
          "comment.cs"
        ],
        "settings": {
          "foreground": "#5A6B5A",
          "fontStyle": "italic"
        }
      },
      // Control-flow & modifiers (no semantic coverage)
      {
        "scope": [
          "keyword.control",
          "keyword.other",
          "storage.modifier",
          "keyword.control.cs",
          "keyword.other.cs",
          "storage.modifier.cs"
        ],
        "settings": {
          "foreground": "#9E6FC9"
        }
      },
      // Boolean/null literals
      {
        "scope": [
          "constant.language.boolean.true",
          "constant.language.boolean.false",
          "constant.language.null",
          "constant.language.boolean.true.cs",
          "constant.language.boolean.false.cs",
          "constant.language.null.cs"
        ],
        "settings": {
          "foreground": "#C9BE6F",
          "fontStyle": "bold"
        }
      },
      // Interpolation delimiters { … } in $"..." — accented
      {
        "scope": [
          "punctuation.definition.interpolation.begin",
          "punctuation.definition.interpolation.end",
          "punctuation.definition.interpolation.begin.cs",
          "punctuation.definition.interpolation.end.cs"
        ],
        "settings": {
          "foreground": "#B884E6",
          "fontStyle": "bold"
        }
      },
      // Interpolated content region
      {
        "scope": [
          "meta.interpolation",
          "meta.interpolation.cs"
        ],
        "settings": {
          "foreground": "#E6E6E6"
        }
      },
      // Format specifier after colon {value:0.00}
      {
        "scope": [
          "punctuation.separator.format.specifier",
          "meta.format.specifier",
          "punctuation.separator.format.specifier.cs",
          "meta.format.specifier.cs"
        ],
        "settings": {
          "foreground": "#C9BE6F",
          "fontStyle": "italic"
        }
      },
      // Composite placeholders in string.Format: "{0}", "{1:N2}"
      {
        "scope": [
          "constant.other.placeholder",
          "punctuation.definition.placeholder",
          "constant.other.placeholder.cs",
          "punctuation.definition.placeholder.cs"
        ],
        "settings": {
          "foreground": "#C9C16F",
          "fontStyle": "bold"
        }
      },
      // ===== Primary-constructor parameters (TextMate-only trick) =====
      // Parameters inside class header: class Foo(string name, int age)
      {
        "scope": [
          "meta.class meta.parameters variable.parameter",
          "meta.class meta.parameters variable.parameter.cs"
        ],
        "settings": {
          "foreground": "#E6C97A",
          "fontStyle": "italic"
        } // distinct gold, italic
      }
    ]
  }
}
